Code Style and Structure:
- Write concise, technical Rust code with accurate examples
- Prefer iteration and modularization over code duplication
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError)

Naming Conventions:
- Use lowercase with underscores for directories (e.g., components/auth_wizard)

Error Handling and Validation:
- Prioritize error handling: handle errors and edge cases early
- Use early returns and guard clauses
- Implement proper error logging and user-friendly messages

Performance Optimization:
- try to mmaintain zero copy for all bytes
- try to avoid dynamic functions

Follow Rust docs for style, examples, and code